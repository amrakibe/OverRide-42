int main(void)
{
    int child_pid;
    unsigned int wait_status;

    char shellcode_buffer[128];

    unsigned int temp_status1;
    unsigned int temp_status2;
    long syscall_number;

    memset(shellcode_buffer, 0, sizeof(shellcode_buffer));

    wait_status = 0;
    syscall_number = 0;

    child_pid = fork();
    
    if (child_pid == 0) {
        prctl(1, 1);
        ptrace(PTRACE_TRACEME, 0, 0, 0);
        puts("Give me some shellcode, k");
        gets(shellcode_buffer);
    }

    else {
        while (1) {
            wait(&wait_status);
            temp_status1 = wait_status;

            if ((wait_status & 0x7f) == 0) {
                puts("child is exiting...");
                return 0;
            }
            
            temp_status2 = wait_status;

            if (0 < (char)(((wait_status & 0x7f) + 1) >> 1)) {
                puts("child is exiting...");
                return 0;
            }
            
            syscall_number = ptrace(PTRACE_PEEKUSER, child_pid, 0x2c, 0);

            if (syscall_number == 0xb) {
                puts("no exec() for you");
                kill(child_pid, 9);
                break;
            }
        }
    }
    
    return 0;
}